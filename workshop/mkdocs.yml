# Project Information
site_name: GenAI Stack Workshop
site_url: https://genai-workshop.neo4j.com
site_author: GenAI Developers


# Repository
repo_name: genai-workshop
repo_url: https://github.com/sidagarwal04/genai-workshops-apac
edit_uri: edit/master/docs

# Copyright
copyright: 'Copyright &copy; 2023 Neo4j'

# Settings
docs_dir: 'docs'
site_dir: 'site'

# Navigation
nav:
  - Getting Started: index.md
  - Prerequisites: prereq/prerequisites.md
  - Lab 1 - Building and deploying a simple GenAI application:
    - Overview of GenAI: lab1/overview.md
    - What problems does it solve?: lab1/solution.md
    - Current Challenges: lab1/challenges.md    

  - Lab 2 - Using Docker to containerize and deploy GenAI applications:
    - What is Docker: lab2/what-is-docker.md
    - Inner-loop Developer Workflow: lab2/inner-loop-developer.md
    - Docker Developer Workflow: lab2/docker-developer-workflow.md
    - Docker Image Building and Best Practices: lab2/image-building.md
    - Getting Started with Docker Init: lab2/getting-started.md
    - Getting Started with Sample GenAI App: lab2/genai-stack.md 

  - Lab 3 - Using Neo4j to store and manage data in the form of knowledge graphs:
    - Introduction to Neo4j and Knowledge Graphs: lab3/intro.md
    - Cypher Query Language: lab3/cypher.md
    
  - Lab 4 - Using LangChain to integrate LLMs into Gen-AI applications:
    - Introduction to LLMs: lab4/llms-intro.md
    - Introduction to Langchain: lab4/intro.md
    - Getting Started: lab4/getting-started.md
    - Best Practices: lab4/best-practices.md

  - Lab 5 - Using Ollama to train and deploy large language models:
    - Introduction to Ollama: lab5/intro-to-ollama.md

  - Lab 6 - Gen-AI Stack - Letâ€™s bring it together:
    - LLMs Hallucinations: lab6/llms-hallucination.md
    - Avoid LLM Hallucination: lab6/avoid-hallucination.md
    - Introduction to RAG: lab6/rag.md
    - Using Docker Compose: lab6/using-docker-compose.md
    - Troubleshooting: lab6/troubleshooting.md
    - Upcoming Feature: lab6/upcoming-feature.md


# Theme
theme:
  name: material


# Plugins
plugins:
  - search:
      separator: '[\s\-,:!=\[\]()"`/]+|\.(?!\d)|&[lg]t;|(?!\b)(?=[A-Z][a-z])'


# Customization
extra:
  analytics:
    provider: google
    property: !ENV GOOGLE_ANALYTICS_KEY
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/neo4j
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/neo4j
    - icon: fontawesome/brands/github
      link: https://github.com/neo4j


# Extensions
markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - def_list
  - footnotes
  - meta
  - toc:
      permalink: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.critic
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - pymdownx.highlight
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.snippets:
      check_paths: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde
